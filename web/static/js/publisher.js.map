{"version":3,"sources":["webpack:///webpack/bootstrap 1ba4e3a5137dfbf2a325?dc4b*","webpack:///./publisher/base.js","webpack:///./publisher/Publisher/Publisher.js","webpack:///./publisher/Article/Article.js","webpack:///./publisher/Editor/Editor.js"],"names":["Publisher","require","document","addEventListener","window","Article","Editor","module","exports","__construct","prototype","article","editor","_setupArticle","ARTICLE_SELECTOR","articleElement","querySelector","console","log","nArticleId","getAttribute","_nArticleId","addComment","commentForm","getElementById","MimotoX","utils","callAPI","type","url","data","message","value","dataType","success","resultData","resultStatus","resultSomething","scrollTo","body","scrollHeight","reportComment","nCommentId","highlightComment","unhighlightComment","onInfocardAdd","NodeConfig","onInfocardEdit","popup"],"mappings":"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","file":"publisher.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"web/static/js/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = \"1ba4e3a5137dfbf2a325\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1ba4e3a5137dfbf2a325","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\n// Publisher demo classes\nlet Publisher = require('./Publisher/Publisher');\n\n\n/**\n * Auto run\n */\ndocument.addEventListener('DOMContentLoaded', function ()\n{\n    // init\n    window.Publisher = new Publisher();\n\n}, false);\n\n\n\n// WEBPACK FOOTER //\n// ./publisher/base.js","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\n// Mimoto classes\nlet Article = require('../Article/Article');\nlet Editor = require('../Editor/Editor');\n\n\nmodule.exports = function() {\n\n    // start\n    this.__construct();\n};\n\nmodule.exports.prototype = {\n\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Properties -------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    article: null,\n    editor: null,\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function()\n    {\n        // connect\n        this._setupArticle();\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Private methods --------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Setup article\n     * @private\n     */\n    _setupArticle: function()\n    {\n        // init\n        const ARTICLE_SELECTOR = 'data-js-article';\n\n        // search\n        let articleElement = document.querySelector('[' + ARTICLE_SELECTOR + ']');\n\n        // verify\n        if (!articleElement) return;\n\n\n        console.log('Setting up article and editor ...');\n\n\n        // read\n        let nArticleId = articleElement.getAttribute(ARTICLE_SELECTOR);\n\n        // create\n        this.article = new Article(nArticleId);\n        this.editor = new Editor(nArticleId);\n    }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./publisher/Publisher/Publisher.js","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\nmodule.exports = function(nArticleId)\n{\n    // start\n    this.__construct(nArticleId);\n};\n\nmodule.exports.prototype = {\n\n\n    _nArticleId: null,\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function(nArticleId)\n    {\n        // register\n        this._nArticleId = nArticleId;\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Public methods ---------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Add a comment to the article\n     * @param nArticleId\n     */\n    addComment: function()\n    {\n        // register\n        let commentForm = document.getElementById('commentForm');\n\n        // call\n        MimotoX.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/article/\" + this._nArticleId + \"/comment/add\",\n            data: {message: commentForm.value},\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                commentForm.value = '';\n                window.scrollTo(0,document.body.scrollHeight);\n            }\n        });\n    },\n\n    /**\n     * Report a comment\n     * @param nCommentId\n     */\n    reportComment: function(nCommentId)\n    {\n        // call\n        MimotoX.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/comment/\" + nCommentId + \"/remove\",\n            data: {message: commentForm.value},\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                console.log('Comment reported');\n            }\n        });\n    },\n\n    /**\n     * Highlight comment\n     * @param nCommentId\n     */\n    highlightComment: function(nCommentId)\n    {\n        // call\n        MimotoX.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/comment/\" + nCommentId + \"/highlight\",\n            data: null,\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                console.log('Comment highlighted');\n            }\n        });\n    },\n\n    /**\n     * Unhighlight comment\n     * @param nCommentId\n     */\n    unhighlightComment: function(nCommentId)\n    {\n        // call\n        MimotoX.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/comment/\" + nCommentId + \"/unhighlight\",\n            data: null,\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                console.log('Comment unhighlighted');\n            }\n        });\n    }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./publisher/Article/Article.js","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\n\nmodule.exports = function() {\n\n\n    // start\n    this.__construct();\n};\n\nmodule.exports.prototype = {\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function()\n    {\n\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Public methods ---------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    onInfocardAdd: function(NodeConfig)\n    {\n        console.log('Hi! from custom publisher onAdd function');\n\n        // 1. check if id is set\n        // 2. call popup, or\n        // 3. create comment\n\n        //let my_blot = Parchment.find(NodeConfig.node);\n\n\n        //let popup = MimotoX.popup('/Mimoto.Aimless/form/infocard');\n    },\n\n    onInfocardEdit: function(NodeConfig)\n    {\n        console.log('Hi! from custom publisher onEdit function');\n\n        // 1. check if id is set\n        // 2. call popup, or\n        // 3. create comment\n\n        let popup = MimotoX.popup('/Mimoto.Aimless/form/infocard');\n\n        // 4. delete formatting options (als mogelijke feedback van popup)\n        // 5. onInit (wanneer het op de dom geplaatst worden vanuit een saved state\n    }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./publisher/Editor/Editor.js"],"sourceRoot":""}