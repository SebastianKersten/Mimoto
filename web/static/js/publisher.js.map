{"version":3,"sources":["webpack:///webpack/bootstrap 19605c1bd187536ca9bd?7e50*","webpack:///./publisher/base.js","webpack:///./publisher/Publisher/Publisher.js","webpack:///./publisher/Article/Article.js","webpack:///./publisher/Editor/Editor.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;;ACtBD;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;;;;AAKA;AACA;AACA;;;AAGA;AACA;;;;AAIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;;AAIL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;;AAIL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;;;AAGA;;;;AAIA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;;;AAIL;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA","file":"publisher.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"web/static/js/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = \"19605c1bd187536ca9bd\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 19605c1bd187536ca9bd","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\n// Publisher demo classes\nlet Publisher = require('./Publisher/Publisher');\n\n\n/**\n * Auto run\n */\ndocument.addEventListener('DOMContentLoaded', function ()\n{\n    // init\n    window.Publisher = new Publisher();\n\n}, false);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./publisher/base.js\n// module id = 112\n// module chunks = 2","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\n// Mimoto classes\nlet Article = require('../Article/Article');\nlet Editor = require('../Editor/Editor');\n\n\nmodule.exports = function() {\n\n    // start\n    this.__construct();\n};\n\nmodule.exports.prototype = {\n\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Properties -------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    article: null,\n    editor: null,\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function()\n    {\n        // connect\n        this._setupArticle();\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Private methods --------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Setup article\n     * @private\n     */\n    _setupArticle: function()\n    {\n        // init\n        const ARTICLE_SELECTOR = 'data-js-article';\n\n        // search\n        let articleElement = document.querySelector('[' + ARTICLE_SELECTOR + ']');\n\n        // verify\n        if (!articleElement) return;\n\n\n        console.log('Setting up article and editor ...');\n\n\n        // read\n        let nArticleId = articleElement.getAttribute(ARTICLE_SELECTOR);\n\n        // create\n        this.article = new Article(nArticleId);\n        this.editor = new Editor(nArticleId);\n    }\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./publisher/Publisher/Publisher.js\n// module id = 113\n// module chunks = 2","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\nmodule.exports = function(nArticleId)\n{\n    // start\n    this.__construct(nArticleId);\n};\n\nmodule.exports.prototype = {\n\n\n    _nArticleId: null,\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function(nArticleId)\n    {\n        // register\n        this._nArticleId = nArticleId;\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Public methods ---------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Add a comment to the article\n     * @param nArticleId\n     */\n    addComment: function()\n    {\n        // register\n        let commentForm = document.getElementById('commentForm');\n\n        // call\n        MimotoX.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/article/\" + this._nArticleId + \"/comment/add\",\n            data: {message: commentForm.value},\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                commentForm.value = '';\n                window.scrollTo(0,document.body.scrollHeight);\n            }\n        });\n    },\n\n    /**\n     * Report a comment\n     * @param nCommentId\n     */\n    reportComment: function(nCommentId)\n    {\n        // call\n        MimotoX.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/comment/\" + nCommentId + \"/remove\",\n            data: {message: commentForm.value},\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                console.log('Comment reported');\n            }\n        });\n    },\n\n    /**\n     * Highlight comment\n     * @param nCommentId\n     */\n    highlightComment: function(nCommentId)\n    {\n        // call\n        MimotoX.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/comment/\" + nCommentId + \"/highlight\",\n            data: null,\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                console.log('Comment highlighted');\n            }\n        });\n    },\n\n    /**\n     * Unhighlight comment\n     * @param nCommentId\n     */\n    unhighlightComment: function(nCommentId)\n    {\n        // call\n        MimotoX.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/comment/\" + nCommentId + \"/unhighlight\",\n            data: null,\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                console.log('Comment unhighlighted');\n            }\n        });\n    }\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./publisher/Article/Article.js\n// module id = 114\n// module chunks = 2","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\n\nmodule.exports = function() {\n\n\n    // start\n    this.__construct();\n};\n\nmodule.exports.prototype = {\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function()\n    {\n\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Public methods ---------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    onInfocardAdd: function(NodeConfig)\n    {\n        console.log('Hi! from custom publisher onAdd function');\n\n        // 1. check if id is set\n        // 2. call popup, or\n        // 3. create comment\n\n        //let my_blot = Parchment.find(NodeConfig.node);\n\n\n        //let popup = MimotoX.popup('/Mimoto.Aimless/form/infocard');\n    },\n\n    onInfocardEdit: function(NodeConfig)\n    {\n        console.log('Hi! from custom publisher onEdit function');\n\n        // 1. check if id is set\n        // 2. call popup, or\n        // 3. create comment\n\n        let popup = MimotoX.popup('/Mimoto.Aimless/form/infocard');\n\n        // 4. delete formatting options (als mogelijke feedback van popup)\n        // 5. onInit (wanneer het op de dom geplaatst worden vanuit een saved state\n    }\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./publisher/Editor/Editor.js\n// module id = 115\n// module chunks = 2"],"sourceRoot":""}