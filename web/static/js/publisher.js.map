{"version":3,"file":"js/publisher.js","sources":["webpack:///webpack/bootstrap aa9d71b594ec285ad042","webpack:///src/userinterface/publisher/publisher.js","webpack:///src/userinterface/publisher/Publisher/Publisher.js","webpack:///src/userinterface/publisher/Article/Article.js","webpack:///src/userinterface/publisher/Editor/Editor.js","webpack:///src/userinterface/publisher/Publisher/presence/AlsoOnThisPage.js","webpack:///src/userinterface/publisher/Publisher/presence/IsTypingComment.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = \"aa9d71b594ec285ad042\";\n\n \t// __webpack_chunkname__\n \t__webpack_require__.cn = \"js/publisher.js\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 451);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap aa9d71b594ec285ad042","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\n// Publisher demo classes\nlet Publisher = require('./Publisher/Publisher');\n\n\n/**\n * Auto run\n */\ndocument.addEventListener('DOMContentLoaded', function ()\n{\n    // init\n    window.Publisher = new Publisher();\n\n}, false);\n\n\n\n// WEBPACK FOOTER //\n// src/userinterface/publisher/publisher.js","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\n// Mimoto classes\nlet Article = require('../Article/Article');\nlet Editor = require('../Editor/Editor');\n\nlet AlsoOnThisPage = require('./presence/AlsoOnThisPage');\nlet IsTypingComment = require('./presence/IsTypingComment');\n\n\nmodule.exports = function() {\n\n    // start\n    this.__construct();\n};\n\nmodule.exports.prototype = {\n\n    // presence\n    _alsoOnThisPage: null,\n    _isTypingComment: null,\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Properties -------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    article: null,\n    editor: null,\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function()\n    {\n        // connect\n        this._setupArticle();\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Private methods --------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    alsoOnThisPage: function(channel)\n    {\n        this._alsoOnThisPage = new AlsoOnThisPage(channel);\n    },\n\n    isTypingComment: function(channel)\n    {\n        this._isTypingComment = new IsTypingComment(channel);\n    },\n\n\n    /**\n     * Setup article\n     * @private\n     */\n    _setupArticle: function()\n    {\n        // init\n        const ARTICLE_SELECTOR = 'data-js-article';\n\n        // search\n        let articleElement = document.querySelector('[' + ARTICLE_SELECTOR + ']');\n\n        // verify\n        if (!articleElement) return;\n\n\n        console.log('Setting up article and editor ...');\n\n\n        // read\n        let nArticleId = articleElement.getAttribute(ARTICLE_SELECTOR);\n\n        // create\n        this.article = new Article(nArticleId);\n        this.editor = new Editor(nArticleId);\n    }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// src/userinterface/publisher/Publisher/Publisher.js","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\nmodule.exports = function(nArticleId)\n{\n    // start\n    this.__construct(nArticleId);\n};\n\nmodule.exports.prototype = {\n\n\n    _nArticleId: null,\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function(nArticleId)\n    {\n        // register\n        this._nArticleId = nArticleId;\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Public methods ---------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Add a comment to the article\n     * @param nArticleId\n     */\n    addComment: function()\n    {\n        // register\n        let commentForm = document.getElementById('commentForm');\n\n        // call\n        Mimoto.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/article/\" + this._nArticleId + \"/comment/add\",\n            data: {message: commentForm.value},\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                commentForm.value = '';\n                window.scrollTo(0,document.body.scrollHeight);\n            }\n        });\n    },\n\n    /**\n     * Report a comment\n     * @param nCommentId\n     */\n    reportComment: function(nCommentId)\n    {\n        // call\n        Mimoto.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/comment/\" + nCommentId + \"/remove\",\n            data: {message: commentForm.value},\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                console.log('Comment reported');\n            }\n        });\n    },\n\n    /**\n     * Highlight comment\n     * @param nCommentId\n     */\n    highlightComment: function(nCommentId)\n    {\n        // call\n        Mimoto.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/comment/\" + nCommentId + \"/highlight\",\n            data: null,\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                console.log('Comment highlighted');\n            }\n        });\n    },\n\n    /**\n     * Unhighlight comment\n     * @param nCommentId\n     */\n    unhighlightComment: function(nCommentId)\n    {\n        // call\n        Mimoto.utils.callAPI({\n            type: 'post',\n            url: \"/publisher/comment/\" + nCommentId + \"/unhighlight\",\n            data: null,\n            dataType: 'json',\n            success: function(resultData, resultStatus, resultSomething) {\n                console.log('Comment unhighlighted');\n            }\n        });\n    }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// src/userinterface/publisher/Article/Article.js","/**\n * Mimoto.Publisher - Demo - How to build a publication platform\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\n\nmodule.exports = function() {\n\n\n    // start\n    this.__construct();\n};\n\nmodule.exports.prototype = {\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function()\n    {\n\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Public methods ---------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    onInfocardAdd: function(NodeConfig)\n    {\n        console.log('Hi! from custom publisher onAdd function');\n\n        // 1. check if id is set\n        // 2. call popup, or\n        // 3. create comment\n\n        //let my_blot = Parchment.find(NodeConfig.node);\n\n\n        //let popup = Mimoto.popup('/Mimoto.Aimless/form/infocard');\n    },\n\n    onInfocardEdit: function(NodeConfig)\n    {\n        console.log('Hi! from custom publisher onEdit function');\n\n        // 1. check if id is set\n        // 2. call popup, or\n        // 3. create comment\n\n        let popup = Mimoto.popup('/Mimoto.Aimless/form/infocard');\n\n        // 4. delete formatting options (als mogelijke feedback van popup)\n        // 5. onInit (wanneer het op de dom geplaatst worden vanuit een saved state\n    }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// src/userinterface/publisher/Editor/Editor.js","/**\n * Mimoto.Publisher - Demo \"Also on this page\"\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\nmodule.exports = function(channel) {\n\n    // start\n    this.__construct(channel);\n};\n\nmodule.exports.prototype = {\n\n    // communication\n    _channel: null,\n    _others: [],\n\n    // dom\n    _elOtherTemplate: null,\n    _elOtherContainer: null,\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function(channel)\n    {\n        // store\n        this._channel = channel;\n\n        // register\n        this._elOtherTemplate = channel.element.querySelector('[data-publisher-article-others-other-template]');\n        this._elOtherContainer = channel.element.querySelector('[data-publisher-article-others-container]');\n\n        //configure\n        channel.onSelfConnected = this._onSelfConnected.bind(this);\n        channel.onOtherConnected = this._onOtherConnected.bind(this);\n        channel.onOtherIdentified = this._onOtherIdentified.bind(this);\n        channel.onOtherDisconnected = this._onOtherDisconnected.bind(this);\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Event listeners --------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * HANDLE SELF-CONNECTED\n     * @param aOthers array List of ids of others already on this page\n     * @private\n     */\n    _onSelfConnected: function(aOthers)\n    {\n        // 1. init\n        this._initOthersAlreadyOnPage(aOthers);\n\n        // 2. broadcast\n        this._channel.identify({ firstName: Mimoto.user.firstName, lastName: Mimoto.user.lastName, avatar: Mimoto.user.avatar });\n    },\n\n    /**\n     * HANDLE OTHER-CONNECTED\n     * @param clientId\n     * @private\n     */\n    _onOtherConnected: function(clientId)\n    {\n        // add\n        this._addOther(clientId);\n    },\n\n    /**\n     * HANDLE OTHER-IDENTIFIED\n     * @param clientId\n     * @private\n     */\n    _onOtherIdentified: function(clientId)\n    {\n        this._showPublicInfo(clientId);\n    },\n\n    /**\n     * HANDLE OTHER-DISCONNECTED\n     * @param clientId\n     * @private\n     */\n    _onOtherDisconnected: function(clientId)\n    {\n        // 1. verify if user was known\n        if (!this._others[clientId]) return;\n\n        // 2. register\n        let elOther = this._others[clientId].element;\n\n        // 3. remove\n        elOther.parentNode.removeChild(elOther);\n\n        // 4. cleanup\n        delete this._others[clientId];\n\n        // 5. update\n        this._toggleVisibility();\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Private methods --------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Init others already on this page\n     * @param aOthers\n     * @private\n     */\n    _initOthersAlreadyOnPage: function(aOthers)\n    {\n        // build\n        let nOtherCount = aOthers.length;\n        for (let nOtherIndex = 0; nOtherIndex < nOtherCount; nOtherIndex++)\n        {\n            // register\n            let clientId = aOthers[nOtherIndex];\n\n            // add\n            this._addOther(clientId);\n\n            // show public info\n            this._showPublicInfo(clientId);\n        }\n    },\n\n    /**\n     * Add other client to AlsoOnThisPage som element\n     * @param clientId\n     * @private\n     */\n    _addOther: function(clientId)\n    {\n        // create\n        let elOther = this._elOtherTemplate.cloneNode(true);\n\n        // connect\n        this._elOtherContainer.appendChild(elOther);\n\n        // store\n        this._others[clientId] = { element: elOther };\n\n        // update\n        this._toggleVisibility();\n    },\n\n    /**\n     * Show other client's public info\n     * @param clientId\n     * @private\n     */\n    _showPublicInfo: function(clientId)\n    {\n        // verify if user was known\n        if (!this._others[clientId]) return;\n\n        // register\n        let clientInfo = this._channel.getInfo(clientId);\n\n        // validate\n        if (!clientInfo) return;\n\n        // register\n        let elOther = this._others[clientId].element;\n        let elAvatarInitials = elOther.querySelector('[data-publisher-article-others-other-initials]');\n\n        // set data\n        if (clientInfo.avatar)\n        {\n            elOther.setAttribute('style', 'background-image: url(\"' + clientInfo.avatar + '\");');\n            elAvatarInitials.innerText = '';\n        }\n        else\n        {\n            elAvatarInitials.innerText = clientInfo.firstName.substr(0, 1).toUpperCase() + clientInfo.lastName.substr(0, 1).toUpperCase();\n        }\n    },\n\n    /**\n     * Toggle visibility of the AlsoInPage dom element\n     * @private\n     */\n    _toggleVisibility: function()\n    {\n        // find other\n        let bHasItems = false;\n        for (let clientId in this._others) { bHasItems = true; break; }\n\n        // toggle\n        this._channel.element.style.visibility = (!bHasItems) ? 'hidden' : 'visible';\n    }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// src/userinterface/publisher/Publisher/presence/AlsoOnThisPage.js","/**\n * Mimoto.Publisher - Demo \"Is typing\"\n *\n * @author Sebastian Kersten (@supertaboo)\n */\n\n\n'use strict';\n\n\nmodule.exports = function(channel) {\n\n    // start\n    this.__construct(channel);\n};\n\nmodule.exports.prototype = {\n\n    // communication\n    _channel: null,\n    _aOthersCurrentlyTyping: [],\n\n    // dom\n    _elIsTypingMessage: null,\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Constructor ------------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Constructor\n     */\n    __construct: function(channel)\n    {\n        // store\n        this._channel = channel;\n\n        // register\n        this._elIsTypingMessage = document.querySelector('[data-publisher-conversation-istypingmessage]');\n\n        //configure\n        channel.onSelfConnected = this._onSelfConnected.bind(this);\n\n        // configure\n        channel.receive('isTyping', this._onOtherIsTyping.bind(this));\n\n        //configure\n        channel.element.addEventListener('input', this._onInput.bind(this));\n    },\n\n\n\n    // ----------------------------------------------------------------------------\n    // --- Event listeners --------------------------------------------------------\n    // ----------------------------------------------------------------------------\n\n\n    /**\n     * Handle SELF-CONNECTED\n     * @private\n     */\n    _onSelfConnected: function()\n    {\n        // broadcast\n        this._channel.identify({ firstName: Mimoto.user.firstName });\n    },\n\n    /**\n     * Handle INPUT\n     * @private\n     */\n    _onInput: function()\n    {\n        // send\n        this._channel.send('isTyping');\n    },\n\n    /**\n     * Handle OTHER-ISTYPING\n     * @param clientId The client's id\n     * @private\n     */\n    _onOtherIsTyping: function(clientId)\n    {\n        // 1. register\n        let publicInfo = this._channel.getInfo(clientId);\n\n        // 2. validate  or init\n        if (!this._aOthersCurrentlyTyping[clientId]) this._aOthersCurrentlyTyping[clientId] = { clientId:clientId, firstName:publicInfo.firstName };\n\n        // 3. load\n        let other = this._aOthersCurrentlyTyping[clientId];\n\n        // 4. store (in milliseconds)\n        other.since = new Date().getTime();\n\n        // 5. update\n        this._updateIsTypingMessage();\n    },\n\n\n    _updateIsTypingMessage: function()\n    {\n        // stop\n        if (this._timer){ clearTimeout(this._timer); delete this._timer; }\n\n\n        // ---\n\n\n        // 1. init\n        let aOthersNames = [];\n\n        // 2. register (in milliseconds)\n        let nCurrentTimestamp = new Date().getTime();\n\n        // 3. search or cleanup\n        for (let clientId in this._aOthersCurrentlyTyping)\n        {\n            // validate\n            if (this._aOthersCurrentlyTyping[clientId].since + 2500 < nCurrentTimestamp)\n            {\n                // a. cleanup\n                delete this._aOthersCurrentlyTyping[clientId];\n            }\n            else\n            {\n                // b. register\n                aOthersNames.push(this._aOthersCurrentlyTyping[clientId].firstName)\n            }\n        }\n\n\n        // ---\n\n\n        // init\n        let sMessage = '';\n\n        // compose\n        let nUserCount = aOthersNames.length;\n        for (let nUserIndex = 0; nUserIndex < nUserCount; nUserIndex++)\n        {\n            // build\n            sMessage += aOthersNames[nUserIndex];\n\n            // connect\n            if (nUserIndex < nUserCount - 1)\n            {\n                sMessage += (nUserCount === 2 || nUserIndex === nUserCount - 2) ? ' and ' : ', ';\n            }\n        }\n\n        // update interface\n        if (nUserCount === 0)\n        {\n            // cleanup\n            this._elIsTypingMessage.innerHTML = '&nbsp;';\n        }\n        else\n        {\n            this._elIsTypingMessage.innerText = sMessage + ' ' + ((nUserCount === 1) ? 'is' : 'are') + ' typing ..';\n        }\n\n\n        // ---\n\n\n        // validate\n        if (aOthersNames.length > 0) this._timer = setTimeout(function() { this._updateIsTypingMessage(); }.bind(this), 100);\n    }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// src/userinterface/publisher/Publisher/presence/IsTypingComment.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnEA;;;;;;AAOA;AACA;AAEA;AACA;AAAA;AACA;AAEA;;;AAGA;AAEA;AACA;AAEA;;;;;;;;ACtBA;;;;;;AAOA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5EA;;;;;;;;ACxBA;;;;;;AAOA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAtGA;;;;;;;;AChBA;;;;;;AAOA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA;;;;;;;;AClBA;;;;;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAnMA;;;;;;;;AChBA;;;;;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA9JA;;;;A","sourceRoot":""}